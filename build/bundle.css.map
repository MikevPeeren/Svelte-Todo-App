{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Todos.svelte",
    "../../TodoItem.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Todos from './Todos.svelte';\n</script>\n\n<style>\n    main {\n        text-align: center;\n        padding: 1em;\n        max-width: 240px;\n        margin: 0 auto;\n    }\n\n    h1 {\n        color: #ff3e00;\n        text-transform: uppercase;\n        font-size: 4em;\n        font-weight: 100;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n    }\n</style>\n\n<main>\n    <h1>Svelte ToDo App</h1>\n\n    <Todos />\n</main>\n",
    "<script>\n    import TodoItem from './TodoItem.svelte';\n\n    let newTodoTitle = '';\n    let currentFilter = 'all';\n    let nextId = 4;\n\n    let todos = [\n        {\n            id: 1,\n            title: 'Learn Svelte',\n            completed: false,\n        },\n        {\n            id: 2,\n            title: 'Cleanup the house',\n            completed: false,\n        },\n        {\n            id: 3,\n            title: 'Get Groceries',\n            completed: false,\n        },\n    ];\n\n    // Creating a new Todo item and adding it to the array.\n    function addToDo(event) {\n        if (event.key === 'Enter') {\n            todos = [\n                ...todos,\n                {\n                    id: nextId,\n                    completed: false,\n                    title: newTodoTitle,\n                },\n            ];\n            nextId = nextId + 1;\n            newTodoTitle = '';\n        }\n    }\n\n    // $: marks a statement as reactive\n    // Reactive statements run immediately before the component updates, whenever the values that they depend on have changed.\n    $: todosRemaining = filteredTodos.filter(todo => !todo.completed).length;\n    $: filteredTodos =\n        currentFilter === 'all'\n            ? todos\n            : currentFilter === 'completed'\n            ? todos.filter(todo => todo.completed)\n            : todos.filter(todo => !todo.completed);\n\n    // Checkbox to select all Checkboxes\n    function checkAllTodos(event) {\n        todos.forEach(todo => (todo.completed = event.target.checked));\n        todos = todos;\n    }\n\n    // Updates which Todo's are being shown.\n    function updateFilter(newFilter) {\n        currentFilter = newFilter;\n    }\n\n    // Removes all completed tasks\n    function clearCompleted() {\n        todos = todos.filter(todo => !todo.completed);\n    }\n\n    // Received from the TodoItem Component\n    function handleDeleteTodo(event) {\n        todos = todos.filter(todo => todo.id !== event.detail.id);\n    }\n\n    // Received from the TodoItem Component\n    function handleToggleComplete(event) {\n        const todoIndex = todos.findIndex(todo => todo.id === event.detail.id);\n        const updatedTodo = { ...todos[todoIndex], completed: !todos[todoIndex].completed };\n        todos = [...todos.slice(0, todoIndex), updatedTodo, ...todos.slice(todoIndex + 1)];\n    }\n</script>\n\n<style>\n    .container {\n        max-width: 800px;\n        margin: 10px auto;\n    }\n    .todo-input {\n        width: 100%;\n        padding: 10px, 20px;\n        font-size: 18px;\n        margin-bottom: 20px;\n    }\n    .inner-container {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        font-size: 16px;\n        border-top: 1px solid lightgrey;\n        padding-top: 15px;\n        margin-bottom: 13px;\n    }\n    .inner-container-input {\n        margin-right: 12px;\n    }\n    button {\n        font-size: 14px;\n        background-color: white;\n        appearance: none;\n        padding: 15px;\n    }\n    button:hover {\n        background: lightgreen;\n    }\n    button:focus {\n        outline: none;\n    }\n    .active {\n        background: lightgreen;\n    }\n</style>\n\n<div class=\"container\">\n    <input\n        type=\"text\"\n        class=\"todo-input\"\n        placeholder=\"Insert todo item ...\"\n        bind:value={newTodoTitle}\n        on:keydown={addToDo} />\n\n    {#each filteredTodos as todo}\n        <div class=\"todo-item\">\n            <TodoItem {...todo} on:deleteTodo={handleDeleteTodo} on:toggleComplete={handleToggleComplete} />\n        </div>\n    {/each}\n\n    <div class=\"inner-container\">\n        <div>\n            <label>\n                <input class=\"inner-container-input\" type=\"checkbox\" on:change={checkAllTodos} />\n                Check All\n            </label>\n        </div>\n        <div>{todosRemaining} items left</div>\n    </div>\n\n    <div class=\"inner-container\">\n        <div>\n            <button on:click={() => updateFilter('all')} class:active={currentFilter === 'all'}>All</button>\n            <button on:click={() => updateFilter('active')} class:active={currentFilter === 'active'}>Active</button>\n            <button on:click={() => updateFilter('completed')} class:active={currentFilter === 'completed'}>\n                Completed\n            </button>\n        </div>\n        <dir>\n            <button on:click={clearCompleted}>Clear Completed</button>\n        </dir>\n    </div>\n</div>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte';\n    // Animation from Svelte\n    import { fly } from 'svelte/transition';\n\n    export let id;\n    export let title;\n    export let completed;\n\n    const dispatch = createEventDispatcher();\n\n    // Dispatching so that the parent Component (Todos) is able to receive the event.\n    function deleteTodo() {\n        dispatch('deleteTodo', {\n            id: id,\n        });\n    }\n\n    // Dispatching so that the parent Component (Todos) is able to receive the event.\n    function toggleComplete() {\n        dispatch('toggleComplete', {\n            id: id,\n        });\n    }\n</script>\n\n<style>\n    .todo-item {\n        margin-bottom: 15px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        animation-duration: 0.3s;\n    }\n    .remove-item {\n        cursor: pointer;\n        margin-left: 15px;\n    }\n    .remove-item:hover {\n        color: lightseagreen;\n    }\n    .todo-item-left {\n        display: flex;\n        align-items: center;\n    }\n    .todo-item-label {\n        border: 1px solid white;\n        margin-left: 12px;\n    }\n    .completed {\n        text-decoration: line-through;\n        color: grey;\n    }\n</style>\n\n<div class=\"todo-item\">\n    <div class=\"todo-item-left\" transition:fly={{ y: 20, duration: 300 }}>\n        <input type=\"checkbox\" bind:checked={completed} on:change={toggleComplete} />\n        <div class=\"todo-item-label\" class:completed>{title}</div>\n    </div>\n    <div class=\"remove-item\" on:click={deleteTodo}>Ã—</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAKI,IAAI,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAClB,CAAC,AAED,EAAE,cAAC,CAAC,AACA,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACvB,IAAI,cAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACnB,CAAC,AACL,CAAC;AC0DD,UAAU,cAAC,CAAC,AACR,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,IAAI,CAAC,IAAI,AACrB,CAAC,AACD,WAAW,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,CAAC,IAAI,CACnB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,gBAAgB,cAAC,CAAC,AACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC/B,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IAAI,AACvB,CAAC,AACD,sBAAsB,cAAC,CAAC,AACpB,YAAY,CAAE,IAAI,AACtB,CAAC,AACD,MAAM,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,oBAAM,MAAM,AAAC,CAAC,AACV,UAAU,CAAE,UAAU,AAC1B,CAAC,AACD,oBAAM,MAAM,AAAC,CAAC,AACV,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,OAAO,cAAC,CAAC,AACL,UAAU,CAAE,UAAU,AAC1B,CAAC;AC1FD,UAAU,cAAC,CAAC,AACR,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,kBAAkB,CAAE,IAAI,AAC5B,CAAC,AACD,YAAY,cAAC,CAAC,AACV,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,0BAAY,MAAM,AAAC,CAAC,AAChB,KAAK,CAAE,aAAa,AACxB,CAAC,AACD,eAAe,cAAC,CAAC,AACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,gBAAgB,cAAC,CAAC,AACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,WAAW,CAAE,IAAI,AACrB,CAAC,AACD,UAAU,cAAC,CAAC,AACR,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IAAI,AACf,CAAC"
}